@{
    Layout = null;
    var tokens = ViewData["tokens"] as string[] ?? new string[] { };
}
@model FCM_PushNotification.Models.Notification

<!DOCTYPE html>
<html>
<head>
    <meta charset=utf-8 />
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Firebase Cloud Messaging</title>
    <!-- Material Design Theming -->
    <link rel="stylesheet" href="https://code.getmdl.io/1.1.3/material.orange-indigo.min.css">
    <link rel="stylesheet" href="https://fonts.googleapis.com/icon?family=Material+Icons">
    <link rel="stylesheet" href="~/Content/main.css">

    <script defer src="https://code.getmdl.io/1.1.3/material.min.js"></script>
    <script src="~/Scripts/jquery.js"></script>
</head>
<body>
    <div class="demo-layout mdl-layout mdl-js-layout mdl-layout--fixed-header">
        <!-- Header section containing title -->
        <header class="mdl-layout__header mdl-color-text--white mdl-color--light-blue-700">
            <div class="mdl-cell mdl-cell--12-col mdl-cell--12-col-tablet mdl-grid">
                <div class="mdl-layout__header-row mdl-cell mdl-cell--12-col mdl-cell--12-col-tablet mdl-cell--8-col-desktop">
                    <h3>Firebase Cloud Messaging - Push Notification</h3>
                </div>
            </div>
        </header>
        <main class="mdl-layout__content mdl-color--grey-100">
            <div class="mdl-cell mdl-cell--12-col mdl-cell--12-col-tablet mdl-grid">
                <!-- Container for the Table of content -->
                <div class="mdl-card mdl-shadow--2dp mdl-cell mdl-cell--12-col mdl-cell--12-col-tablet mdl-cell--12-col-desktop">
                    <div class="mdl-card__supporting-text mdl-color-text--grey-600">
                        @Html.DisplayNameFor(m => m.Title)
                        @Html.TextBoxFor(m => m.Title)
                    </div>
                    <div class="mdl-card__supporting-text mdl-color-text--grey-600">
                        @Html.DisplayNameFor(m => m.Body)
                        @Html.TextBoxFor(m => m.Body)
                    </div>
                    <div class="mdl-card__supporting-text mdl-color-text--grey-600">
                        @Html.DisplayNameFor(m => m.Icon)
                        @Html.TextBoxFor(m => m.Icon)
                    </div>
                    <div class="mdl-card__supporting-text mdl-color-text--grey-600">
                        @Html.DisplayNameFor(m => m.ClickAction)
                        @Html.TextBoxFor(m => m.ClickAction)
                    </div>
                    <div class="mdl-card__supporting-text mdl-color-text--grey-600">
                        @Html.DisplayNameFor(m => m.Tag)
                        @Html.TextBoxFor(m => m.Tag)
                    </div>
                    <div class="mdl-card__supporting-text mdl-color-text--grey-600">
                        <h4>Push Notifications</h4>
                        <button class="mdl-button mdl-js-button mdl-button--raised mdl-button--colored"
                                onclick="pushNotifications()">
                            Push Notifications
                        </button>
                    </div>
                </div>
            </div>
            <hr />
            <br />
            <table>
                <thead><td>No.</td><td>Token</td></thead>
                @for (int i = 1; i <= tokens.Count(); i++)
                {
                    <tr><td>@i</td><td>@tokens[i-1]</td></tr>
                }
            </table>

        </main>
    </div>

    <script>
        function pushNotifications() {
            $.post("@Url.Action("SendMessage", "Home")",
                {
                    Title: $("#Title").val(),
                    Body: $("#Body").val(),
                    Icon: $("#Icon").val(),
                    ClickAction: $("#ClickAction").val(),
                    Tag: $("#Tag").val()
                },
                function(d) {

                });
        }
    </script>
</body>
</html>